Database scaling 
has thousands database request. wither data to master database and read data from slave databases (clone of master database).
using hash table to linker data using keys.

Need to have: 
·         Very high level understanding of cloud solutions 
       The cloud came as solution. it is the using network of remote computing device           (servers) hosted on the  internet to store, manage, and process data, rather than         a local server or a personal computer.
        Is the delivery of on-demand computing resources - everything form applications         to data centers - over the internet on a pay-for-use basis.
        Flexible, Scalable, Inexpensive.
        Public cloud: is a cloud where services and infrastructure are hosted by a cloud provider offering access to these over a public network line internet.
        Private cloud: is a dedicated infrastructure for an organization maintained on a private network hosted internally or externally. 
        Hyberid Cloud: combines the elements of bother a private and public cloud (for sensitive and non sensitive operation). 
·         hands on Architecture experience
       Microservices are an architectural and organizational approach to software development.  Using a microservices approach, software is composed of small independent services that communicate over well-defined APIs. The services could running paralleling and independence.
      Microservices Architecture on AWS:
User interface:
    Cloud Front, Static Content S3
Microservices: The API of a microservice is the center entry point for all client requests. The application logic hides behind a set of programmatic interfaces, typically a RESTful web services.
     AWS using the Elastic Load Balancing (ELB) to balance ECS and auto scaling to implement a microservices application.    
·         application architecture knowledge
Operational Excellence 
The operational excellence pillar focuses on running and monitoring systems to deliver business value, and continually improving processes and procedures. Key topics include managing and automating changes, responding to events, and defining standards to successfully manage daily operations.
Security 
The security pillar focuses on protecting information & systems. Key topics include confidentiality and integrity of data, identifying and managing who can do what with privilege management, protecting systems, and establishing controls to detect security events.

Reliability 
The reliability pillar focuses on the ability to prevent, and quickly recover from failures to meet business and customer demand. Key topics include foundational elements around setup, cross project requirements, recovery planning, and how we handle change.
Performance Efficiency 
The performance efficiency pillar focuses on using IT and computing resources efficiently. Key topics include selecting the right resource types and sizes based on workload requirements, monitoring performance, and making informed decisions to maintain efficiency as business needs evolve.
·         expertise on architecture concepts
       Design NNPC seismic process HPC.
·         Java expertise 
·         scalable architecture
·         Latest trends in technology (Cloud, CICD, DEVOps, Microservices, NoSQL and distributed computing) 
·         Excellent Communication skills
·         web applications
·         Architecture perspective
·         vendor management
·         Must be able to explain the architecture
·         cloud deployments
·         emerging technologies: microservices, nosql data based, CICD, messaging platforms
       DevOps: Delivery Pipeline between Company and Customers.
 Your Company => Build => Test => Release => Customers
                         <= Plan <= Monitor <= 
Better Collaboration among the "Devs" and "Ops" of you Organization.  Developers Team & Operations Team.
 Continuous Integration, Continuous Delivery, Infrastructure-as-code etc.
clouding implement codes in the severs.
AWS Code Commit is a fully-managed source control service that makes it easy for companies to host secure and highly scalable private Git repositories.
Code Pipeline automat builds, tests, and deploys your code every time there is a code change, based on the release process models your define.
CodeBuild is a fully managed build service that complies source code, runs tests, and produces software packages that are ready to deploy.
AWS CloudFormation gives developers and systems administrators an easy way to create and manage a collection of related AWS resources, provisioning and updating them in an orderly and predictable fashion.
AWS OpsWorks is a configuration management service that uses Chef, an automation platform that treats server configurations as code.
OpsWorks uses Chef to automate how servers are configured, deployed, and managed across your Amazon Elastic Compute Cloud (Amazon EC2) instnaces or on-premises computer environments.  
·         NoSQL / MongoDB 
       DynamoDB Fast and flexible NoSQL database service for document and key value module data storage. 
       Add DynamoDB at AWS, create table, create key, add items at DB.
       MongoDB Relational DB: 
       unstructurer data. coming SQL and NoSQL. Document story. many mongodb management.  
run service management require create vm, install mongo db, binding application. 
·         messaging systems
·         Must be able to articulate answers
·         formal architecture experience 
 
Must be able to: 
·         articulate architecture definition methods
·         arch/design patterns
·         designing for NFRs 
·         AWS
·         Cloud apps
        Mobile apps in the app store and  google paly.
        Get out box scalability, flexibility & security.

·         DevOps
·         OSS
·         NoSQL
·         Event driven architectures
      Change is the norm
      Event production -> Event detection -> Event reaction -> Production -> Dection -> Reaction.
     no central networking. broadcast events. the go anywhere and the event different process at different place at real time. it AI and big data. Like block chain.
·         Java
·         Oracle
·         Containers
·         Defend project work done
·         Architectural understanding 
·         Custom application development
·         aware of designing application for high scalability
·         articulate how to optimize the application for better user experience

***************
4+1 architecture
Logical view: Represent a set of abstractions. Emphasizes classes and objects.
Process View: Shows any communication between those processes.
Physical View: Models the system's execution environment
Development View: The system's modules, or components, including packages, sub-systems, and class libraries.
+ one Use Case View" Captures use goal and scenarios. Offers an outside-world perspective on the system.

What does Linux have?
Process Scheduler (PS)
Memory Manager (MM)
File System (FS) 
Network Interface (NI)
Inter Process Communication (IPC)
Initialization (Init)
Library (lib)
JVEE Security
Build security enterprise applications.
*******************
The interval Threat Model, 
Client Tier (Standalone Client or Browser)  => Web Tier (We container) =>
Application Client Container (Java EE application client) => EJB Tier (EJB container) =>
EIS Tire (RDBMS, Message Queue, EIS services).
Characteristics of App Security. 
Java EE security model, Web Tier Security, EJB Tier Security, EIS Tier Security, Java EE Security Challenges, Summary 
create annotation at Linux login with network. (who can entry)
and add on annotation at each module, db, apps (who can use)
