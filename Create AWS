
xCreate AWS Account at
https://aws.amazon.com
hw2kem_Dl@00
12 month free.
10$/mo

build 4 redhat server instances

server_master   ec2-18-221-73-174.us-east-2.compute.amazonaws.com  (18.221.73.174)
server_db       ec2-18-218-43-72.us-east-2.compute.amazonaws.com (18.218.43.72)
server_app      ec2-18-220-200-56.us-east-2.compute.amazonaws.com (18.220.200.56)
server_web      ec2-18-220-88-71.us-east-2.compute.amazonaws.com  (18.220.88.71)
server_ansible  ec2-18-220-72-179.us-east-2.compute.amazonaws.com (18.220.72.179)

Create 5 Elastic IPS and assocate to servers.

password: demokey.pem  (create ssh key file and save at client local)

connect PutTTY client or VMware


Putty:
Download and install Putty and PuttyGen
Run PuttyGen load key file demokey.pem and generat new putty accepted key file demokey_putty.ppk

Prun Putty to create 4 sesions
Saved Session: server_master
Session\Host Name: ec2-18-221-73-174.us-east-2.compute.amazonaws.com
Saved Session: server_app
Session\Host Name: ec2-18-220-200-56.us-east-2.compute.amazonaws.com
Saved Session: server_db
Session\Host Name: ec2-18-218-43-72.us-east-2.compute.amazonaws.com
Saved Session: server_web
Session\Host Name: ec2-18-220-88-71.us-east-2.compute.amazonaws.com
Saved Session: server_ansible
Session\Host Name: ec2-18-220-72-179.us-east-2.compute.amazonaws.com

Connection\Data\Auto-lonin username: ec2-user
Connection\SSH\Auth: Browse from C:\Hwang\AWS\demokey_putty..ppk
Save and Open
Laod and open all essions.

hostnamectl set-hostname "server_master"
user name: ec2_user
set default user ec2_user new password.
passwd ec2-user
new password: test
retype password: test

set root password of all servers.
sudo su
passwd:
new password: root
retype password: root

vi /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
172.31.16.166   server_master
172.31.27.228   server_web
172.31.46.51    server_db
172.31.17.202   server_app
172.31.38.207   server_ansible
save and copy to all servers /etc/


create ssh-key at server_ansible and copy to all other server.
[ec2-user@server_ansible ~]$ ssh-keygen
[ec2-user@server_ansible ~]$ sudo ssh-copy-id server_app

need vi /etc/ssh/sshd_config and change
PasswordAuthentication yes
#PermitEmptyPasswords no
#PasswordAuthentication no
systemctl restart sshd

Install Ansible
go to https://www.tecmint.com/how-to-enable-epel-repository-for-rhel-centos-6-5/an

## RHEL/CentOS 7 64-Bit ##
# wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
# rpm -ivh epel-release-latest-7.noarch.rpm

download epel-release 

first install wget package for downlaod repository
[ec2-user@server_ansible ~]$ sudo yum install wget
[ec2-user@server_ansible ~]$ wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
[ec2-user@server_ansible ~]$ rpm -ivh epel-release-latest-7.noarch.rpm

[ec2-user@server_ansible ~]$ cd /etc/yum.repos.d/
[ec2-user@server_ansible yum.repos.d]$ ll
total 28
-rw-r--r--. 1 root root  951 Oct  2 17:44 epel.repo
-rw-r--r--. 1 root root 1050 Oct  2 17:44 epel-testing.repo
-rw-r--r--. 1 root root  607 Mar 27 14:13 redhat-rhui-client-config.repo
-rw-r--r--. 1 root root 8679 Mar 27 14:13 redhat-rhui.repo
-rw-r--r--. 1 root root   80 Mar 27 14:13 rhui-load-balancers.conf

epel.repo is avaliable

could install  sudo yum install ansible -y


[ansibleuser@server_ansible ~]$ ansible --version
ansible 2.4.2.0
  config file = /etc/ansible/ansible.cfg
  configured module search path = [u'/home/ansibleuser/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /usr/bin/ansible
  python version = 2.7.5 (default, May  3 2017, 07:55:04) [GCC 4.8.5 20150623 (Red Hat 4.8.5-14)]
[ansibleuser@server_master ~]$ cd /etc/ansible/
[ansibleuser@server_master ansible]$ ls
ansible.cfg  hosts  roles

[ec2-user@server_ansible ansible]$ sudo vi hosts
[server_web]
172.31.27.228
[server_app]
172.31.17.202
[server_db]
172.31.46.51

[ec2-user@server_ansible ~]$ ansible all --list-hosts
  hosts (3):
    172.31.46.51
    172.31.27.228
    172.31.17.202

[ec2-user@server_ansible ~]$ ansible all -m ping
172.31.17.202 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
172.31.27.228 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
172.31.46.51 | SUCCESS => {
    "changed": false,
    "ping": "pong"


only need talk to server_web

[ec2-user@server_ansible]$ ansible server_web -m ping
172.31.27.228 | SUCCESS => {
    "changed": false,
    "ping": "pong"
}

[ec2-user@server_ansible]$ ansible all -m command -a "uptime"
172.31.27.228 | SUCCESS | rc=0 >>
 15:49:24 up 16:31,  2 users,  load average: 0.00, 0.01, 0.04

172.31.46.51 | SUCCESS | rc=0 >>
 15:49:24 up 16:31,  2 users,  load average: 0.00, 0.01, 0.05

172.31.17.202 | SUCCESS | rc=0 >>
 15:49:24 up 16:30,  2 users,  load average: 0.00, 0.01, 0.04











