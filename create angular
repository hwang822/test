https://www.youtube.com/watch?v=k5E2AVpwsko
Angular 4 is a hot topic.
shoping card to select items and check out
Angular is a framework for building client applications in HTML, CSS, and JavaScript/Type Script.
Gives applicaiotn a clean structure. Front end (UI with HTML, CSS, TypeScript,) => Back-end (Data and processing with HTTP service/APIs).

1. Build Anuglar application.

https://angular.io/guide/quickstart

Step 1. Set up the Development Environment 
Install Node.js® and npm
npm install -g @angular/cli
node -v => v8.9.4
npm -v => 5.6.0

Step 2. Create a new project
Created a folder Angular
C:\Workarea\WCFandWVC\MixwellSoftware\MixwellAngular

Below is project developer site.

C:\Workarea\WCFandWVC\MixwellSoftware\MixwellAngular>dir
 Volume in drive C has no label.
 Volume Serial Number is C8DF-1D5E

 Directory of C:\Workarea\WCFandWVC\MixwellSoftware\MixwellAngular

03/06/2018  04:20 PM    <DIR>          .
03/06/2018  04:20 PM    <DIR>          ..
03/06/2018  04:15 PM             1,313 .angular-cli.json
03/06/2018  04:15 PM               258 .editorconfig
03/06/2018  04:15 PM    <DIR>          e2e
03/06/2018  04:15 PM               956 karma.conf.js
03/29/2018  07:28 AM    <DIR>          node_modules
03/06/2018  04:20 PM           465,308 package-lock.json
03/06/2018  04:20 PM             1,677 package.json
03/06/2018  04:20 PM               876 protractor.conf.js
03/06/2018  04:20 PM    <DIR>          src
03/06/2018  04:20 PM               382 tsconfig.json
03/06/2018  04:20 PM             3,184 tslint.json
               8 File(s)        473,954 bytes
               5 Dir(s)  153,345,609,728 bytes free

C:\Workarea\WCFandWVC\MixwellSoftware\MixwellAngular\src\app

app.component.ts— the component class code, written in TypeScript. 
app.component.html— the component template, written in HTML.
app.component.css— the component's private CSS styles.02/27/2018  09:03 AM               722 protractor.conf.js
02/27/2018  09:03 AM             1,021 README.md
02/27/2018  09:03 AM    <DIR>          src
02/27/2018  09:03 AM               363 tsconfig.json
02/27/2018  09:03 AM             3,012 tslint.json
              10 File(s)        423,353 bytes
               5 Dir(s)  22,967,828,480 bytes free
               
Step 3: Serve the application 
The ng serve command launches the server, watches your files, and rebuilds the app as you make changes to those files.
Using the --open (or just -o) option will automatically open your browser on http://localhost:4200/.
ng serve -o

Step 4: Edit your first Angular component at app.component.ts 
export class AppComponent {
  title = 'Mixwell Software';
}

everytime change the ng will recomplier the code and relash the web page from server.

ng build will build the project at dist.  Use the `-prod` flag for a production build.

Run `ng e2e` to execute the end-to-end tests via [Protractor](http://www.protractortest.org/).

2. Deploy Angular App to IIS
  ng build --prod --base-href /MixwellAngular/
  copy dist folder to iis folder C:\inetpub\wwwroot\MixwellAngular

run iis manager. Set Alias: ePortal (must same name as build product name). Application pool: .Net 4.5. 
  Physical path: C:\inetpub\wwwroot\MixwellAngular. Click OK.
  Run MixwellAngular from IIS browser.
  
 
3. Developer MixwellAngular project.
  
  a. setup project.
  run cmd.
  go to c:\Workarea
  git clone https://github.com/hwang822/WCFandMVC
  cd C:\Workarea\WCFandWVC\MixwellSoftware
  ng new MixwellAngular
  cd C:\Workarea\WCFandWVC\MixwellSoftware\MixwellAngular
  ng serve --open
  The --open flag opens a browser to http://localhost:4200/
  app running in your browser
  
  b. code project
  
  C:\Workarea\WCFandWVC\MixwellSoftware\MixwellAngular\src\app
  The page you see is the application shell. The shell is controlled by an Angular component named AppComponent.
Components are the fundamental building blocks of Angular applications. They display data on the screen, listen for user input, and take action based on that input.

   app.component.ts— the component class code, written in TypeScript. 
   app.component.html— the component template, written in HTML.
   app.component.css— the component's private CSS styles.
  
  Create the heroes component
  ng generate component business

  always import the Component symbol from the Angular core library and annotate the component class with @Component.
  Always export the component class so you can import it elsewhere ... like in the AppModule.
  
  Java script import module and export class to user.
  
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',     //page (component) name, other companent will include this name to put on the page location.
  templateUrl: './app.component.html',     //page UI
  styleUrls: ['./app.component.css'],       //page US style.
  component.ts                             //component module code.
})
export class AppComponent {
  title = 'Mixwell Software';
}

app.component.html add component app-services it set components location list.
<h1>{{title}}</h1>
<app-services></app-services>

example: 3 parts at main page.

Create 3 components for this 3 page

ng generate component Dashboard
ng generate component Employees
ng generate component Services
part 1.
<h1>{{title}}</h1>
<nav>
  <a routerLink="/dashboard">Dashboard</a>
  <a routerLink="/employees">Employees</a>
  <a routerLink="/services">Services</a>
</nav>

part 2. //A router outlet will emit an activate event any time a new component is being instantiated, and a deactivate event when it is being destroyed.
Routes = [{ path: '', redirectTo: '/employees', pathMatch: 'full' },    // will redirectTo to /employees page 
 { path: 'detail/:id', component: EmployeeDetailComponent }]           // will go to commppnent with paramet "detail/:id"
                                                                       // <a routerLink="/detail/{{employee.id}}">
<router-outlet></router-outlet>    

part 3. <app-messages> component.
<app-messages></app-messages>

































