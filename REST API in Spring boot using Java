Create an REST API in Spring boot using Java
https://www.youtube.com/watch?v=Zo9xQzibp4Y&t=308s

Download and Install Java developer tool IntelliJ IDEA.

Create new JAVA project at IJ 
Need add Spring to IJ (not only for Ultimate Edition).
go to https://start.spring.io/
add Dependencies spring web

create demo codes
copy demo codes folder to SpringAPI\demo

in IJ open demo project.
It may need update SDK to version 17 or up.
Download SDK v21 and rebuild demo

package com.example.demo;

have a very simple spring boot prject to run.

DemoApplication.java 

<<<<<<< HEAD
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
=======
package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;
>>>>>>> parent of 8bd8900 (init add SpringMVCDeom)

@SpringBootApplication
public class DemoApplication {

<<<<<<< HEAD
	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}
****************


}

Add api, service folders to using baseing class api and service.
At project files move controller and model folder to under api.
add java class
api\controller\UserController.java class.
package com.example.demo.api.controller;

import com.example.demo.api.model.User;
import com.example.demo.service.UserService;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.GetMapping;


@RestController

public class UserController {
    private final UserService userService;

    @Autowired
    public UserController(UserService userService){
        this.userService = userService;  //DJ service to using its api
    }
    @GetMapping("/User")
    //
=======
	public static void main(String[] args) { 
		SpringApplication.run(DemoApplication.class, args);
		System.out.println("started");  // to test the api is started.
	}
}

****************

Add api, service folders to using baseing class api and service.
At project files move controller and model folder to under api.
add java class

api\controller\UserController.java class.
package com.example.demo.api.controller;

package com.example.demo.api.controller;

import com.example.demo.api.model.User;
import com.example.demo.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@RestController
public class UserController {
    //Test method in Postman

    //localhost:8080/data
    /*
    [
        "A",
        "B",
        "C"
    ]
    */

    @GetMapping("/data")
    public List getData(){
        List l = new ArrayList<>();
        l.add("A");
        l.add("B");
        l.add("C");
        return l;
    }

    @Autowired
    private UserService userService;
    //localhost:8080/AllUser
    /*
    [
     {
        "id": 1,
        "name": "Ida",
        "age": 32,
        "email": "Ida@mail.com"
    },
    {
        "id": 1,
        "name": "Hans",
        "age": 26,
        "email": "Hans@mail.com"
    },
    {
        "id": 1,
        "name": "Lars",
        "age": 45,
        "email": "Lars@mail.com"
    },
    {
        "id": 1,
        "name": "Ben",
        "age": 32,
        "email": "Ben@mail.com"
    },
    {
        "id": 1,
        "name": "Eva",
        "age": 59,
        "email": "Eva@mail.com"
    }
]
     */
    @GetMapping("/AllUser")

    public  List<User> getAllUsers(){
        return userService.getAllUsers();
    }

    //localhost:8080/User?id=1
/*
{
    "id": 1,
    "name": "Ida",
    "age": 32,
    "email": "Ida@mail.com"
}
 */

    @GetMapping("/User")
>>>>>>> parent of 8bd8900 (init add SpringMVCDeom)
    public User getUser(@RequestParam Integer id){

        Optional user = userService.getUser(id);
        if(user.isPresent()){
            return(User) user.get();
        }
        return null;

    }

<<<<<<< HEAD
=======

>>>>>>> parent of 8bd8900 (init add SpringMVCDeom)
}


******************************
api\model\User.java class.
<<<<<<< HEAD
=======
package com.example.demo.api.model;

>>>>>>> parent of 8bd8900 (init add SpringMVCDeom)
public class User {

    private int id;
    private String name;
    private int age;
    private String email;

    public User(int id, String name, int age, String email){
        this.id = id;
        this.name = name;
        this.age = age;
        this.email = email;
    }

    public int getId(){
        return id;
    }

    public void setId(int id){
        this.id = id;   }

    public String getName(){
        return name;
    }

    public void setAge(int age){
        this.age = age;
    }

    public int getAge(){
        return age;
    }

    public String getEmail(){
        return email;
    }

    public void setEmail(String email){
<<<<<<< HEAD
            this.name = email;
    }
}

*************************
api\model\UserService.java class.
=======
        this.name = email;
    }

}

*************************
package com.example.demo.service;
import com.example.demo.api.model.User;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import org.springframework.stereotype.Service;
@Service
>>>>>>> parent of 8bd8900 (init add SpringMVCDeom)

public class UserService {
    private List<User> userList;

    public UserService() {

        userList = new ArrayList<>();

        User user1 = new User( 1, "Ida",  32,  "Ida@mail.com");
        User user2 = new User( 1, "Hans",  26,  "Hans@mail.com");
        User user3 = new User( 1, "Lars",  45,  "Lars@mail.com");
        User user4 = new User( 1, "Ben",  32,  "Ben@mail.com");
        User user5 = new User( 1, "Eva",  59,  "Eva@mail.com");

        userList.addAll(Arrays.asList(user1, user2, user3, user4, user5));

    }

    public Optional<User> getUser(Integer id) {
        Optional optinal = Optional.empty();
        for(User user : userList) {

            if(user.getId() == id){
                optinal = Optional.of(user);
                return optinal;

            }
        }
        return null;
    }

<<<<<<< HEAD
}

download and install postman to test service.


0 comments on commit
=======
    public List<User> getAllUsers(){
        return userList;
    }

}

download and install postman to test service.
test sample 
localhost:8080/User?id=1

>>>>>>> parent of 8bd8900 (init add SpringMVCDeom)
